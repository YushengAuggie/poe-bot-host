[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "poe_bots"
version = "1.0.0"
description = "A framework for creating, testing, and deploying bots for the Poe platform"
readme = "README.md"
authors = [
    {name = "Poe Bots Framework Team"}
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi-poe>=0.0.21",
    "modal-client>=0.52.4271",
    "python-dotenv>=1.0.0",
    "uvicorn>=0.17.6",
    "fastapi>=0.105.0",
    "pydantic>=2.0.0",
    "requests>=2.27.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.1.0",
    "ruff>=0.0.65",
    "pyright>=1.1.300",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
]
ignore = [
    "E501",  # line too long (managed by black)
    "F841",  # local variable assigned but not used
    "F401",  # imported but unused (will fix these later)
]

[tool.ruff.isort]
known-first-party = ["utils", "bots", "tests"]

[tool.pyright]
include = ["utils", "bots", "tests", "*.py"]
exclude = ["venv", "**/node_modules", "**/__pycache__"]
venvPath = "."
venv = "venv"
typeCheckingMode = "standard"
reportMissingImports = true
reportMissingTypeStubs = false
strictParameterNoneValue = true
reportUnusedImport = true
reportUnusedVariable = true
reportImplicitStringConcatenation = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
